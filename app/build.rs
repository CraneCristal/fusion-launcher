use glob::glob;
use std::error::Error;
use std::fs;
use std::io::Write;

fn main() -> Result<(), Box<dyn Error>> {
    let compiled_css_path = "./src/ui/style/compiled.css";
    let mut compiled_css_file = fs::File::create(compiled_css_path)?;

    let mut css_value = String::from("/* This file is automatically generated */\n");
    let entries = glob("src/**/*.css").map_err(|e| format!("Failed to read glob pattern: {e}"))?;

    for entry in entries {
        let path = entry?;
        let data = fs::read_to_string(path)?;
        css_value += data.as_str();
    }

    compiled_css_file.write_all(css_value.as_bytes())?;
    Ok(())
}
